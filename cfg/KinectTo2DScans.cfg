#! /usr/bin/env python
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the Willow Garage nor the names of its
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# Author: Jose Luis Blanco
# Based on script by Blaise Gassend

PACKAGE='kinect_2d_scanner'

from math import pi

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#       Name                        Type     Reconfiguration level             Description                                                    Default    Min   Max
gen.add("vert_half_FOV_up",       double_t, SensorLevels.RECONFIGURE_RUNNING,  "The upper part of the vertical FOV (degrees).",                  5,       1,  89)
gen.add("vert_half_FOV_low",      double_t, SensorLevels.RECONFIGURE_RUNNING,  "The lower part of the vertical FOV (degrees).",                  5,       1,  89)
gen.add("oversampling_ratio",     double_t, SensorLevels.RECONFIGURE_RUNNING,  "Ratio 2D scan rays / Kinect range image columns.",               1.2,     1.1,  3)
gen.add("frame_id",               str_t,    SensorLevels.RECONFIGURE_RUNNING, "The frame in which laser scans will be returned",            "/laser")
gen.add("show_GUI",               bool_t,   SensorLevels.RECONFIGURE_RUNNING,  "Whether to show or not the custom GUI with live data.",                     False)
gen.add("show_3d_points",         bool_t,   SensorLevels.RECONFIGURE_RUNNING,  "If GUI enabled: Show 3D point cloud?",                             True)
gen.add("show_2d_scan",           bool_t,   SensorLevels.RECONFIGURE_RUNNING,  "If GUI enabled: Show 2D equivalent scan?",                         True)
gen.add("show_frustum",           bool_t,   SensorLevels.RECONFIGURE_RUNNING,  "If GUI enabled: Show 3D frustum volume for obstacles?",            True)
exit(gen.generate(PACKAGE, "kinect_2d_scanner", "KinectTo2DScans"))

